name: CI
on:
  push:
    branches: [ "develop", "main"]
  pull_request:
    branches: [ "main", "develop"]
  workflow_dispatch:

jobs:
  api-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        version: [16.x, 17.x, 18.x]
    services:
      postgres:
          image: postgres:14-alpine
      
          env:
              POSTGRES_USER: ${{ secrets.DB_USER }}
              POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
              POSTGRES_DB: ${{ secrets.DB_TEST_DB_NAME }}
          ports:
              - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s 
            --health-timeout 5s 
            --health-retries 5
            --name postgres 

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Dependencies vulnerabilities
        run: npm audit

      - name: Dependencies installation
        run: npm ci

      - name: Linter
        run: npm run lint-staged

      - name: Build
        run: npm run build --if-present

      - name: Unit tests
        env: 
          DB_NAME: ${{ secrets.DB_TEST_DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASS }}
          DB_DIALECT: ${{ secrets.DB_DIALECT }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PORT: ${{ secrets.DB_TEST_DB_PORT }}
        run: npm run migration:generate && npm run migration:run && npm run test:unit